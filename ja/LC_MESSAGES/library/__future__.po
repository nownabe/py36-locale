# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-02 22:25+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Naoki INADA <songofacandy@gmail.com>, 2017\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../Doc/library/__future__.rst:2
msgid ":mod:`__future__` --- Future statement definitions"
msgstr ":mod:`__future__` --- future 文の定義"

#: ../Doc/library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr "**ソースコード:** :source:`Lib/__future__.py`"

#: ../Doc/library/__future__.rst:11
msgid ":mod:`__future__` is a real module, and serves three purposes:"
msgstr ":mod:`__future__` は実際にモジュールであり、次の3つの役割があります:"

#: ../Doc/library/__future__.rst:13
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr "import 文を解析する既存のツールを混乱させることを避け、インポートしようとしているモジュールを見つけられるようにするため。"

#: ../Doc/library/__future__.rst:16
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to"
" 2.1 at least yield runtime exceptions (the import of :mod:`__future__` will"
" fail, because there was no module of that name prior to 2.1)."
msgstr ""
"2.1 以前のリリースで :ref:`future 文 <future>` が実行された場合に、最低でもランタイム例外を投げるようにするため "
"(:mod:`__future__` のインポートは失敗します。なぜなら、 2.1 以前にはそういう名前のモジュールはなかったからです)。"

#: ../Doc/library/__future__.rst:20
msgid ""
"To document when incompatible changes were introduced, and when they will be"
" --- or were --- made mandatory.  This is a form of executable "
"documentation, and can be inspected programmatically via importing "
":mod:`__future__` and examining its contents."
msgstr ""
"互換性のない変化がいつ言語に導入され、いつ言語の一部になる --- あるいは、なった --- "
"のかを文書化するため。これは実行できる形式で書かれたドキュメントなので、 :mod:`__future__` "
"をインポートしてその中身を調べることでプログラムから調査することができます。"

#: ../Doc/library/__future__.rst:25
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr ":file:`__future__.py` のそれぞれの文は次のような形式をしています::"

#: ../Doc/library/__future__.rst:31
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both"
" are 5-tuples of the same form as :data:`sys.version_info`::"
msgstr ""
"ここで、普通は、 *OptionalRelease* は *MandatoryRelease* より小さく、2つとも "
":data:`sys.version_info` と同じフォーマットの5つのタプルからなります::"

#: ../Doc/library/__future__.rst:41
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr "*OptionalRelease* はその機能が導入された最初のリリースを記録します。"

#: ../Doc/library/__future__.rst:43
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""
"まだ時期が来ていない *MandatoryRelease* の場合、*MandatoryRelease* "
"はその機能が言語の一部となるリリースを記します。"

#: ../Doc/library/__future__.rst:47
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""
"その他の場合、*MandatoryRelease* "
"はその機能がいつ言語の一部になったのかを記録します。そのリリースから、あるいはそれ以降のリリースでは、この機能を使う際に future "
"文は必要ではありませんが、future 文を使い続けても構いません。"

#: ../Doc/library/__future__.rst:51
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped."
msgstr "*MandatoryRelease* は ``None`` になるかもしれません。つまり、予定された機能が破棄されたということです。"

#: ../Doc/library/__future__.rst:54
msgid ""
"Instances of class :class:`_Feature` have two corresponding methods, "
":meth:`getOptionalRelease` and :meth:`getMandatoryRelease`."
msgstr ""
":class:`_Feature` クラスのインスタンスには対応する2つのメソッド、 :meth:`getOptionalRelease` と "
":meth:`getMandatoryRelease` があります。"

#: ../Doc/library/__future__.rst:57
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`compiler_flag`"
" attribute on :class:`_Feature` instances."
msgstr ""
"*CompilerFlag* は、動的にコンパイルされるコードでその機能を有効にするために、組み込み関数 :func:`compile` "
"の第4引数に渡す(ビットフィールド)フラグです。このフラグは :class:`_Feature` インスタンスの "
":attr:`compiler_flag` 属性に保存されています。"

#: ../Doc/library/__future__.rst:62
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""
"機能の記述が :mod:`__future__` から削除されたことはまだありません。 Python 2.1 で future "
"文が導入されて以来、この仕組みを使って以下の機能が言語に導入されてきました:"

#: ../Doc/library/__future__.rst:67
msgid "feature"
msgstr "feature"

#: ../Doc/library/__future__.rst:67
msgid "optional in"
msgstr "optional in"

#: ../Doc/library/__future__.rst:67
msgid "mandatory in"
msgstr "mandatory in"

#: ../Doc/library/__future__.rst:67
msgid "effect"
msgstr "effect"

#: ../Doc/library/__future__.rst:69
msgid "nested_scopes"
msgstr "nested_scopes"

#: ../Doc/library/__future__.rst:69
msgid "2.1.0b1"
msgstr "2.1.0b1"

#: ../Doc/library/__future__.rst:69
msgid "2.2"
msgstr "2.2"

#: ../Doc/library/__future__.rst:69
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ":pep:`227`: *Statically Nested Scopes*"

#: ../Doc/library/__future__.rst:72
msgid "generators"
msgstr "generators"

#: ../Doc/library/__future__.rst:72
msgid "2.2.0a1"
msgstr "2.2.0a1"

#: ../Doc/library/__future__.rst:72
msgid "2.3"
msgstr "2.3"

#: ../Doc/library/__future__.rst:72
msgid ":pep:`255`: *Simple Generators*"
msgstr ":pep:`255`: *Simple Generators*"

#: ../Doc/library/__future__.rst:75
msgid "division"
msgstr "division"

#: ../Doc/library/__future__.rst:75
msgid "2.2.0a2"
msgstr "2.2.0a2"

#: ../Doc/library/__future__.rst:75 ../Doc/library/__future__.rst:78
#: ../Doc/library/__future__.rst:84 ../Doc/library/__future__.rst:87
msgid "3.0"
msgstr "3.0"

#: ../Doc/library/__future__.rst:75
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ":pep:`238`: *Changing the Division Operator*"

#: ../Doc/library/__future__.rst:78
msgid "absolute_import"
msgstr "absolute_import"

#: ../Doc/library/__future__.rst:78 ../Doc/library/__future__.rst:81
msgid "2.5.0a1"
msgstr "2.5.0a1"

#: ../Doc/library/__future__.rst:78
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"

#: ../Doc/library/__future__.rst:81
msgid "with_statement"
msgstr "with_statement"

#: ../Doc/library/__future__.rst:81
msgid "2.6"
msgstr "2.6"

#: ../Doc/library/__future__.rst:81
msgid ":pep:`343`: *The \"with\" Statement*"
msgstr ":pep:`343`: *The \"with\" Statement*"

#: ../Doc/library/__future__.rst:84
msgid "print_function"
msgstr "print_function"

#: ../Doc/library/__future__.rst:84 ../Doc/library/__future__.rst:87
msgid "2.6.0a2"
msgstr "2.6.0a2"

#: ../Doc/library/__future__.rst:84
msgid ":pep:`3105`: *Make print a function*"
msgstr ":pep:`3105`: *Make print a function*"

#: ../Doc/library/__future__.rst:87
msgid "unicode_literals"
msgstr "unicode_literals"

#: ../Doc/library/__future__.rst:87
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ":pep:`3112`: *Bytes literals in Python 3000*"

#: ../Doc/library/__future__.rst:90
msgid "generator_stop"
msgstr "generator_stop"

#: ../Doc/library/__future__.rst:90
msgid "3.5.0b1"
msgstr "3.5.0b1"

#: ../Doc/library/__future__.rst:90
msgid "3.7"
msgstr "3.7"

#: ../Doc/library/__future__.rst:90
msgid ":pep:`479`: *StopIteration handling inside generators*"
msgstr ":pep:`479`: *StopIteration handling inside generators*"

#: ../Doc/library/__future__.rst:97
msgid ":ref:`future`"
msgstr ":ref:`future`"

#: ../Doc/library/__future__.rst:98
msgid "How the compiler treats future imports."
msgstr "コンパイラがどのように future インポートを扱うか。"
